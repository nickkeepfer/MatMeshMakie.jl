name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.9'
        os:
          - ubuntu-20.04
        arch:
          - x64
    steps:
      - uses: actions/checkout@v3
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install binary dependencies
        run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      # NOTE: Here you can install dependencies such as matplotlib if you use
      # packages such as PyPlot.
      # - run: pip install matplotlib
      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - name: Configure doc environment
        run: |
          DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --project=docs/ -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
        DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using MatMeshMakie
            DocMeta.setdocmeta!(MatMeshMakie, :DocTestSetup, :(using MatMeshMakie); recursive=true)
            doctest(MatMeshMakie)'
